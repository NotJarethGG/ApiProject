// <auto-generated />
using Dta.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dta.Migrations
{
    [DbContext(typeof(ApiProjectBolsaEmpleo_Context))]
    [Migration("20230518222029_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dta.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("Dta.Models.CandidatoHabilidad", b =>
                {
                    b.Property<int>("CandidatoID")
                        .HasColumnType("int");

                    b.Property<int>("HabilidadID")
                        .HasColumnType("int");

                    b.HasKey("CandidatoID", "HabilidadID");

                    b.HasIndex("HabilidadID");

                    b.ToTable("CandidatoHabilidad");
                });

            modelBuilder.Entity("Dta.Models.CandidatoOferta", b =>
                {
                    b.Property<int>("CandidatoID")
                        .HasColumnType("int");

                    b.Property<int>("OfertaID")
                        .HasColumnType("int");

                    b.HasKey("CandidatoID", "OfertaID");

                    b.ToTable("CandidatoOferta");
                });

            modelBuilder.Entity("Dta.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Dta.Models.Formacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AniosEstudio")
                        .HasColumnType("int");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("FechaConclusion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTitulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("Formacion");
                });

            modelBuilder.Entity("Dta.Models.Habilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Habilidad");
                });

            modelBuilder.Entity("Dta.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("Dta.Models.OfertaHabilidad", b =>
                {
                    b.Property<int>("OfertaId")
                        .HasColumnType("int");

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.HasKey("OfertaId", "HabilidadId");

                    b.HasIndex("HabilidadId");

                    b.ToTable("OfertaHabilidad");
                });

            modelBuilder.Entity("Dta.Models.CandidatoHabilidad", b =>
                {
                    b.HasOne("Dta.Models.Candidato", "Candidato")
                        .WithMany("CandidatoHabilidades")
                        .HasForeignKey("CandidatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dta.Models.Habilidad", "Habilidad")
                        .WithMany("CandidatoHabilidades")
                        .HasForeignKey("HabilidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Habilidad");
                });

            modelBuilder.Entity("Dta.Models.CandidatoOferta", b =>
                {
                    b.HasOne("Dta.Models.Candidato", "Candidato")
                        .WithMany("CandidatoOfertas")
                        .HasForeignKey("CandidatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dta.Models.Oferta", "Oferta")
                        .WithMany("CandidatoOfertas")
                        .HasForeignKey("CandidatoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("Dta.Models.Formacion", b =>
                {
                    b.HasOne("Dta.Models.Candidato", "Candidato")
                        .WithMany("formacion")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Dta.Models.Oferta", b =>
                {
                    b.HasOne("Dta.Models.Empresa", "Empresa")
                        .WithMany("Ofertas")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dta.Models.OfertaHabilidad", b =>
                {
                    b.HasOne("Dta.Models.Habilidad", "Habilidad")
                        .WithMany("OfertaHabilidades")
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dta.Models.Oferta", "Oferta")
                        .WithMany("OfertaHabilidades")
                        .HasForeignKey("OfertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habilidad");

                    b.Navigation("Oferta");
                });

            modelBuilder.Entity("Dta.Models.Candidato", b =>
                {
                    b.Navigation("CandidatoHabilidades");

                    b.Navigation("CandidatoOfertas");

                    b.Navigation("formacion");
                });

            modelBuilder.Entity("Dta.Models.Empresa", b =>
                {
                    b.Navigation("Ofertas");
                });

            modelBuilder.Entity("Dta.Models.Habilidad", b =>
                {
                    b.Navigation("CandidatoHabilidades");

                    b.Navigation("OfertaHabilidades");
                });

            modelBuilder.Entity("Dta.Models.Oferta", b =>
                {
                    b.Navigation("CandidatoOfertas");

                    b.Navigation("OfertaHabilidades");
                });
#pragma warning restore 612, 618
        }
    }
}
